import {
  __publicField
} from "./chunk-VRMXEQCD.js";

// node_modules/@shopify/shopify-api/dist/esm/runtime/crypto/crypto.mjs
var cryptoVar;
try {
  cryptoVar = crypto;
} catch (_e) {
}
function setCrypto(crypto2) {
  cryptoVar = crypto2;
}

// node_modules/@shopify/shopify-api/dist/esm/runtime/crypto/types.mjs
var HashFormat;
(function(HashFormat2) {
  HashFormat2["Base64"] = "base64";
  HashFormat2["Hex"] = "hex";
})(HashFormat || (HashFormat = {}));

// node_modules/@shopify/shopify-api/dist/esm/lib/error.mjs
var ShopifyError = class extends Error {
  constructor(message) {
    super(message);
    Object.setPrototypeOf(this, new.target.prototype);
  }
};
var InvalidHmacError = class extends ShopifyError {
};
var InvalidShopError = class extends ShopifyError {
};
var InvalidHostError = class extends ShopifyError {
};
var InvalidJwtError = class extends ShopifyError {
};
var MissingJwtTokenError = class extends ShopifyError {
};
var InvalidDeliveryMethodError = class extends ShopifyError {
};
var SafeCompareError = class extends ShopifyError {
};
var PrivateAppError = class extends ShopifyError {
};
var HttpRequestError = class extends ShopifyError {
};
var HttpMaxRetriesError = class extends ShopifyError {
};
var HttpResponseError = class extends ShopifyError {
  constructor({ message, code, statusText, body, headers }) {
    super(message);
    __publicField(this, "response");
    this.response = {
      code,
      statusText,
      body,
      headers
    };
  }
};
var HttpRetriableError = class extends HttpResponseError {
};
var HttpInternalError = class extends HttpRetriableError {
};
var HttpThrottlingError = class extends HttpRetriableError {
  constructor({ retryAfter, ...params }) {
    super(params);
    this.response.retryAfter = retryAfter;
  }
};
var RestResourceError = class extends ShopifyError {
};
var GraphqlQueryError = class extends ShopifyError {
  constructor({ message, response, headers, body }) {
    super(message);
    __publicField(this, "response");
    __publicField(this, "headers");
    __publicField(this, "body");
    this.response = response;
    this.headers = headers;
    this.body = body;
  }
};
var InvalidOAuthError = class extends ShopifyError {
};
var BotActivityDetected = class extends ShopifyError {
};
var CookieNotFound = class extends ShopifyError {
};
var InvalidSession = class extends ShopifyError {
};
var InvalidWebhookError = class extends ShopifyError {
  constructor({ message, response }) {
    super(message);
    __publicField(this, "response");
    this.response = response;
  }
};
var MissingWebhookCallbackError = class extends InvalidWebhookError {
};
var MissingRequiredArgument = class extends ShopifyError {
};
var InvalidRequestError = class extends ShopifyError {
};
var BillingError = class extends ShopifyError {
  constructor({ message, errorData }) {
    super(message);
    __publicField(this, "errorData");
    this.errorData = errorData;
  }
};
var FeatureDeprecatedError = class extends ShopifyError {
};

export {
  cryptoVar,
  setCrypto,
  HashFormat,
  ShopifyError,
  InvalidHmacError,
  InvalidShopError,
  InvalidHostError,
  InvalidJwtError,
  MissingJwtTokenError,
  InvalidDeliveryMethodError,
  SafeCompareError,
  PrivateAppError,
  HttpRequestError,
  HttpMaxRetriesError,
  HttpResponseError,
  HttpInternalError,
  HttpThrottlingError,
  RestResourceError,
  GraphqlQueryError,
  InvalidOAuthError,
  BotActivityDetected,
  CookieNotFound,
  InvalidSession,
  InvalidWebhookError,
  MissingWebhookCallbackError,
  MissingRequiredArgument,
  InvalidRequestError,
  BillingError,
  FeatureDeprecatedError
};
//# sourceMappingURL=chunk-SF3SORXG.js.map
